<div class="faq">
    <% let faqItems = [
        { question: "How do I install the system?", answer: "Follow the installation guide provided with the system." },
        { question: "Is it compatible with other smart home devices?", answer: "Yes, it is compatible with most smart home devices." },
        { question: "How does it work?", answer: "The system uses sensors and an AI-based platform to provide real-time information." },
        { question: "Can I receive alerts on my mobile device?", answer: "Yes, you can receive alerts via the companion mobile app." },
        { question: "Is it easy to use?", answer: "The system is designed to be user-friendly with a simple interface." }
    ]; %>

    <% faqItems.forEach(function(item) { %>
        <div class="faq-item">
            <p class="faq-question">
                <%= item.question %>
                <span class="faq-icon"><i class="fas fa-chevron-down"></i></span>
            </p>
            <div class="faq-answer">
                <%= item.answer %>
            </div>
        </div>
    <% }) %>
</div>

<script>
    document.querySelectorAll('.faq-question').forEach(question => {
        question.addEventListener('click', function() {
            const answer = this.nextElementSibling;
            const icon = this.querySelector('.faq-icon i');

            // Close other open answers
            document.querySelectorAll('.faq-answer').forEach(otherAnswer => {
                if (otherAnswer !== answer && otherAnswer.classList.contains('open')) {
                    otherAnswer.classList.remove('open');
                    otherAnswer.previousElementSibling.classList.remove('active');
                    otherAnswer.style.maxHeight = null;
                    otherAnswer.previousElementSibling.querySelector('.faq-icon i').style.transform = 'rotate(0deg)';
                }
            });

            // Toggle the current answer
            if (answer.classList.contains('open')) {
                answer.classList.remove('open');
                this.classList.remove('active');
                answer.style.maxHeight = null; // Reset max-height for smooth close
                icon.style.transform = 'rotate(0deg)'; // Reset icon rotation
            } else {
                answer.classList.add('open');
                this.classList.add('active');
                answer.style.maxHeight = answer.scrollHeight + 'px'; // Set max-height for smooth opening
                icon.style.transform = 'rotate(180deg)'; // Rotate the icon
            }
        });
    });
</script